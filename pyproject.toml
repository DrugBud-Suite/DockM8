[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

unsafe-fixes = true

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`), pycodestyle (`E`), docstring (`D`), 
# bugbear (`B`), comprehensions (`C4`), upgrade (`UP`), and warnings (`W`)
select = ["E", "F", "D", "B", "C4", "UP", "W"]
ignore = [
    "F403",     # Star imports
    "E501",     # Line length
    "D105",     # Magic method docstrings
    "D212",     # Multi-line docstring summary
    "D203",     # One blank line before class docstring
    "E402",     # Module level imports
    "D100",     # Missing module docstring
    "W293",     # Blank line contains whitespace
    "D206"      # Docstring should be indented with spaces
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
# Don't require docstrings in tests
"tests/*" = ["D100", "D101", "D102", "D103", "D104"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = true

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings.
docstring-code-format = false

# Set the line length limit for docstring code formatting
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
split-on-trailing-comma = true

[tool.pytest.ini_options]
testpaths = ["tests", "integration"]
addopts = "-v -ra -q"
log_cli = true
log_cli_level = "INFO"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
minversion = "6.0"
filterwarnings = "ignore"
cache_dir = ".pytest_cache"
norecursedirs = ["software"]